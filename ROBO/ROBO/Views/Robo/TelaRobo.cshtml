@{
    ViewData["Title"] = "Controle do Robô";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body class="d-flex flex-column min-vh-100">

    <header class="text-white text-center">
        <h1><span id="nome"></span></h1>
        <p><span class="text-white-50" id="codigo"></span></p>
        <p><span class="text-white-50" id="ativo"></span></p>
    </header>

    <main class="text-white flex-fill d-flex flex-column align-items-center py-3 w-100">
        <div id="robo-info-cabeca" class="text-center mb-2 mx-auto w-75">
            <div class="row mb-3">
                <div class="col-md-3 d-flex flex-column align-items-center">
                </div>
                <div class="col-md-2 d-flex flex-column align-items-center">
                    <p class="mb-5"></p>
                    <button onclick="inclinaCabeca(2)" type="button" class="btn btn-secondary btn-sm mb-4">Abaixar</button>
                    <button onclick="rotacionaCabeca(2)" type="button" class="btn btn-secondary btn-sm">Rotacionar E.</button>
                </div>
                <div class="col-md-2 text-center">
                    <h5>Cabeça</h5>
                    <p class="mb-1"><strong>Inclinação:</strong></p>
                    <p class="mb-3"><span id="cabeca-inclinacao"></span></p>
                    <p class="mb-1"><strong>Rotação:</strong></p>
                    <p class="mb-1"><span id="cabeca-rotacao"></span></p>
                </div>
                <div class="col-md-2 d-flex flex-column align-items-center">
                    <p class="mb-5"></p>
                    <button onclick="inclinaCabeca(1)" type="button" class="btn btn-secondary btn-sm mb-4">Levantar</button>
                    <button onclick="rotacionaCabeca(1)" type="button" class="btn btn-secondary btn-sm">Rotacionar D.</button>
                </div>
                <div class="col-md-3 d-flex flex-column align-items-center">
                </div>
            </div>
        </div>

        <div id="robo-info-bracos" class="text-center mb-4 w-75 mx-auto">
            <div class="row">
                <div class="col-md-2 d-flex flex-column align-items-center">
                    <p class="mb-5"></p>
                    <button onclick="moveCotovelo(2,2)" type="button" class="btn btn-secondary btn-sm mb-4">Repousar</button>
                    <button onclick="rotacionaPulso(2,2)" type="button" class="btn btn-secondary btn-sm">Rotacionar E.</button>
                </div>
                <div class="col-md-2">
                    <h5>Braço Esquerdo</h5>
                    <p class="mb-1"><strong>Cotovelo:</strong></p>
                    <p class="mb-3"><span id="braco-esquerdo-cotovelo"></span></p>
                    <p class="mb-1"><strong>Pulso:</strong></p>
                    <p class="mb-1"><span id="braco-esquerdo-pulso"></span></p>
                </div>
                <div class="col-md-2 d-flex flex-column align-items-center">
                    <p class="mb-5"></p>
                    <button onclick="moveCotovelo(1,2)" type="button" class="btn btn-secondary btn-sm mb-4">Contrair</button>
                    <button onclick="rotacionaPulso(1,2)" type="button" class="btn btn-secondary btn-sm">Rotacionar D.</button>
                </div>

                <div class="col-md-2 d-flex flex-column align-items-center">
                    <p class="mb-5"></p>
                    <button onclick="moveCotovelo(2,1)" type="button" class="btn btn-secondary btn-sm mb-4">Repousar</button>
                    <button onclick="rotacionaPulso(2,1)" type="button" class="btn btn-secondary btn-sm">Rotacionar E.</button>
                </div>
                <div class="col-md-2">
                    <h5>Braço Direito</h5>
                    <p class="mb-1"><strong>Cotovelo:</strong></p>
                    <p class="mb-3"><span id="braco-direito-cotovelo"></span></p>
                    <p class="mb-1"><strong>Pulso:</strong></p>
                    <p class="mb-1"><span id="braco-direito-pulso"></span></p>
                </div>
                <div class="col-md-2 d-flex flex-column align-items-center">
                    <p class="mb-5"></p>
                    <button onclick="moveCotovelo(1,1)" type="button" class="btn btn-secondary btn-sm mb-4">Contrair</button>
                    <button onclick="rotacionaPulso(1,1)" type="button" class="btn btn-secondary btn-sm">Rotacionar D.</button>
                </div>
            </div>
        </div>

        <div class="text-center">
            <button onclick="resetaRobo()" type="button" class="btn btn-warning btn-sm mx-2">Reiniciar</button>
        </div>

    </main>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const roboData = localStorage.getItem('robo');
            if (roboData) {
                const robo = JSON.parse(roboData);
                atualizarDadosRobo(robo);
            }
        });

        function atualizarDadosRobo(robo) {
            document.getElementById("ativo").innerText = robo.ativo ? "Ativo" : "Inativo";
            document.getElementById("codigo").innerText = robo.codigo;
            document.getElementById("nome").innerText = robo.nome;
            document.getElementById("cabeca-inclinacao").innerText = inclinacaoCabecaMap[robo.cabeca.inclinacao] || "Desconhecido";
            document.getElementById("cabeca-rotacao").innerText = rotacaoCabecaMap[robo.cabeca.rotacao] || "Desconhecido";
            document.getElementById("braco-direito-cotovelo").innerText = estadoCotoveloMap[robo.bracoDireito.cotovelo] || "Desconhecido";
            document.getElementById("braco-direito-pulso").innerText = estadoPulsoMap[robo.bracoDireito.pulso] || "Desconhecido";
            document.getElementById("braco-esquerdo-cotovelo").innerText = estadoCotoveloMap[robo.bracoEsquerdo.cotovelo] || "Desconhecido";
            document.getElementById("braco-esquerdo-pulso").innerText = estadoPulsoMap[robo.bracoEsquerdo.pulso] || "Desconhecido";
        }

        function obterDadosRoboAtual() {
            return JSON.parse(localStorage.getItem('robo')) || {};
        }

        function resetaRobo() {
            const robo = obterDadosRoboAtual();
            fetch('@Url.Action("Reseta", "Robo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(robo)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        atualizarDadosRobo(data.content);
                        localStorage.setItem('robo', JSON.stringify(data.content));
                    } else {
                        alert('Erro ao reiniciar o robô: ' + data.message);
                    }
                })
                .catch(error => console.error('Erro:', error));
        }

        function inclinaCabeca(sentido) {
            const sentidoMovimento = sentido;

            fetch('@Url.Action("InclinaCabeca", "Robo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    RoboBecomex: obterDadosRoboAtual(),
                    SentidoMovimento: sentidoMovimento
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        atualizarDadosRobo(data.content);
                        localStorage.setItem('robo', JSON.stringify(data.content));
                    } else {
                        console.error("Erro ao inclinar a cabeça:", data.message);
                    }
                })
                .catch(error => console.error("Erro de rede:", error));
        }

        function rotacionaCabeca(sentido) {
            const sentidoMovimento = sentido;

            fetch('@Url.Action("RotacionaCabeca", "Robo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    RoboBecomex: obterDadosRoboAtual(),
                    SentidoMovimento: sentidoMovimento
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        atualizarDadosRobo(data.content);
                        localStorage.setItem('robo', JSON.stringify(data.content));
                    } else {
                        console.error("Erro ao inclinar a cabeça:", data.message);
                    }
                })
                .catch(error => console.error("Erro de rede:", error));
        }

        function moveCotovelo(sentido, membro) {
            const sentidoMovimento = sentido;
            const identificaMembro = membro;

            fetch('@Url.Action("MoveCotovelo", "Robo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    RoboBecomex: obterDadosRoboAtual(),
                    IdentificaMembro: identificaMembro,
                    SentidoMovimento: sentidoMovimento
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        atualizarDadosRobo(data.content);
                        localStorage.setItem('robo', JSON.stringify(data.content));
                    } else {
                        console.error("Erro ao inclinar a cabeça:", data.message);
                    }
                })
                .catch(error => console.error("Erro de rede:", error));
        }

        function rotacionaPulso(sentido, membro) {
            const sentidoMovimento = sentido;
            const identificaMembro = membro;

            fetch('@Url.Action("RotacionaPulso", "Robo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    RoboBecomex: obterDadosRoboAtual(),
                    IdentificaMembro: identificaMembro,
                    SentidoMovimento: sentidoMovimento
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        atualizarDadosRobo(data.content);
                        localStorage.setItem('robo', JSON.stringify(data.content));
                    } else {
                        console.error("Erro ao inclinar a cabeça:", data.message);
                    }
                })
                .catch(error => console.error("Erro de rede:", error));
        }

        function exibirModalAlterarNome() {
            const modal = new bootstrap.Modal(document.getElementById('modalAlterarNome'));
            modal.show();
        }

        const inclinacaoCabecaMap = {
            0: "Baixo",
            1: "Repouso",
            2: "Cima"
        };

        const rotacaoCabecaMap = {
            0: "-90°",
            1: "-45°",
            2: "Repouso",
            3: "45°",
            4: "90°"
        };

        const estadoCotoveloMap = {
            0: "Repouso",
            1: "L. Contraído",
            2: "Contraído",
            3: "F. Contraído"
        };

        const estadoPulsoMap = {
            0: "-90°",
            1: "-45°",
            2: "Repouso",
            3: "45°",
            4: "90°",
            5: "135°",
            6: "180°"
        };
    </script>
</body>
</html>